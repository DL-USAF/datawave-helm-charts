datawave-monolith-umbrella:
  dwv-authorization:
    global:
      dockerRegistry:
        url: dwvregistry.azurecr.us
    args:
      - "--spring.output.ansi.enabled=ALWAYS"
      - "--spring.profiles.active=default,postgres,k8s"
    image:
      name: datawave/jsd-dwv-auth
      tag: 0.0.5
      pullPolicy: Always
  dwv-configuration:
    additionalConfigs:
      authorization:
        postgres:
          config:
            db-addr: "postgres-postgresql.datawave.svc.cluster.local:5432"
            db-name: "authorizations"
            db-user: "postgres"
            db-password: "password"
            server-DN-regex: '.*server.*'
            id-query-where-clauses:
              first_name: "firstname"
              last_name: "lastname"
            dn-regex: "^(?<firstname>[a-zA-Z]*)\\.(?<lastname>[a-zA-Z]*).*$"
dwv-ingest:
  config:
    liveDataTypes: tvshows,tspi
    types:
      - name: tvshows
        flagMakerConfig:
          liveFolder: tvshows
          bulkFolder: tvshows-bulk
          config:
            distrubutionArgs: none
            extraIngestArgs: "-data.name.override=tvshows"
            inputFormat: datawave.ingest.json.mr.input.JsonInputFormat
            lifo: false
        properties: 
          "file.input.format": datawave.ingest.json.mr.input.JsonInputFormat
          "data.name": tvshows
          "tvshows.output.name": tvshows
          "tvshows.ingest.helper.class": datawave.ingest.json.config.helper.JsonIngestHelper
          "tvshows.reader.class": datawave.ingest.json.mr.input.JsonRecordReader
          "tvshows.handler.classes": "datawave.ingest.json.mr.handler.ContentJsonColumnBasedHandler,datawave.ingest.mapreduce.handler.facet.FacetHandler"
          "tvshows.data.category.uuid.fields": ID,EXTERNALS_THETVDB,EXTERNALS_TVRAGE,EXTERNALS_IMDB
          "tvshows.data.separator": ","
          "tvshows.data.category.marking.visibility.field": "VISIBILITY"
          "tvshows.data.header": ID,NAME,PREMIERED,RUNTIME,STATUS,SUMMARY,OFFICIALSITE,LANGUAGE,GENRES,WEIGHT,URL,TYPE
          "tvshows.data.process.extra.fields": true
          "tvshows.data.json.flattener.mode": GROUPED_AND_NORMAL
          "tvshows.SUMMARY.data.field.marking": PUBLIC
          "tvshows.data.category.date": PREMIERED
          "tvshows.data.category.date.formats": yyyy-MM-dd,yyyy-MM-dd'T'HH:mm:ss'Z',yyyy-MM-dd HH:mm:ss
          "tvshows.data.category.index": NAME,ID,ID,EXTERNALS_THETVDB,EXTERNALS_TVRAGE,EXTERNALS_IMDB,EMBEDDED_CAST_CHARACTER_NAME,EMBEDDED_CAST_PERSON_NAME,EMBEDDED_CAST_PERSON_ID,GENRES,NETWORK_NAME,OFFICIALSITE,TYPE,STATUS,RUNTIME,URL
          "tvshows.data.category.index.reverse": NAME,NETWORK_NAME,OFFICIALSITE,URL
          "tvshows.data.category.token.fieldname.designator": _TOKEN
          "tvshows.data.category.index.tokenize.allowlist": SUMMARY,NETWORK_NAME,NAME,EMBEDDED_CAST_CHARACTER_NAME,EMBEDDED_CAST_PERSON_NAME
          "tvshows.data.category.index.only": SUMMARY_TOKEN,NETWORK_NAME_TOKEN,NAME_TOKEN,EMBEDDED_CAST_CHARACTER_NAME_TOKEN,EMBEDDED_CAST_PERSON_NAME_TOKEN
          "tvshows.data.default.normalization.failure.policy": FAIL
          "tvshows.data.default.type.class": datawave.data.type.LcNoDiacriticsType
          "tvshows.PREMIERED.data.field.type.class": datawave.data.type.DateType
          "tvshows.WEIGHT.data.field.type.class": datawave.data.type.NumberType
          "tvshows.RUNTIME.data.field.type.class": datawave.data.type.NumberType
          "tvshows.facet.category.name.network": "NETWORK_NAME;GENRES,EMBEDDED_CAST_PERSON_GENDER,RATING_AVERAGE"
      - name: tspi
        flagMakerConfig:
          liveFolder: tspi
          bulkFolder: tspi-bulk
          config:
            distrubutionArgs: none
            extraIngestArgs: "-data.name.override=tspi"
            inputFormat: datawave.ingest.json.mr.input.JsonInputFormat
            lifo: false
        properties: 
          "file.input.format": datawave.ingest.json.mr.input.JsonInputFormat
          "data.name": tspi
          "tspi.output.name": tspi
          "tspi.ingest.helper.class": datawave.ingest.json.config.helper.JsonIngestHelper
          "tspi.reader.class": datawave.ingest.json.mr.input.JsonRecordReader
          "tspi.handler.classes": "datawave.ingest.json.mr.handler.ContentJsonColumnBasedHandler,datawave.ingest.mapreduce.handler.facet.FacetHandler"
          "tspi.data.category.uuid.fields": ORIGINAL_UUID
          "tspi.data.separator": ","
          "tspi.data.category.marking.visibility.field": VISIBILITY
          "tspi.data.header": TIME
          "tspi.data.process.extra.fields": true
          "tspi.data.json.flattener.mode": GROUPED_AND_NORMAL
          "tspi.data.category.date": TIME
          "tspi.data.category.date.formats": yyyy-MM-dd,yyyy-MM-dd'T'HH:mm:ss'Z',yyyy-MM-dd HH:mm:ss
          "tspi.data.category.index": LATITUDE,LONGITUDE,ALTITUDE,EASTVELOCITY,NORTHVELOCITY,UPVELOCITY,PRODUCT_TYPE
          "tspi.data.category.index.reverse": LATITUDE,LONGITUDE,ALTITUDE,PRODUCT_TYPE
          "tspi.data.category.token.fieldname.designator": _TOKEN
          "tspi.data.category.index.tokenize.allowlist": PRODUCT_TYPE
          "tspi.data.category.index.only": PRODUCT_TYPE_TOKEN
          "tspi.data.default.normalization.failure.policy": FAIL
          "tspi.data.default.type.class": datawave.data.type.LcNoDiacriticsType
          "tspi.LATITUDE.data.field.type.class": datawave.data.type.NumberType
          "tspi.LONGITUDE.data.field.type.class": datawave.data.type.NumberType
          "tspi.ALTITUDE.data.field.type.class": datawave.data.type.NumberType
          